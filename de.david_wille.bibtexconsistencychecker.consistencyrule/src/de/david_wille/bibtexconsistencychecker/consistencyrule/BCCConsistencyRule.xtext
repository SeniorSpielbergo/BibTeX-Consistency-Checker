grammar de.david_wille.bibtexconsistencychecker.consistencyrule.BCCConsistencyRule with org.eclipse.xtext.common.Terminals

generate bCCConsistencyRule "http://www.david-wille.de/bibtexconsistencychecker/consistencyrule/BCCConsistencyRule"

BCCConsistencyRule:
	'consistency' 'rule' '{'
		ruleBody = BCCRuleBody
	'}';

BCCRuleBody:
	'name' name = STRING
	('applies' 'to' appliesToBody = BCCAbstractSelectorBody ('except' 'for' exceptForBody = BCCAbstractSelectorBody)?)
	('excluded' 'entry' 'keys' excludedEntryKeysBody = BCCAbstractExcludedEntryKeysBody)?
	(ifThenElseExpressions += BCCIfThenElseExpression)*;

BCCAbstractSelectorBody:
	BCCSingleEntrySelectorBody | BCCMultiEntrySelectorBody;

BCCAbstractExcludedEntryKeysBody:
	BCCSingleEntryExcludedEntryKeysBody | BCCMultiEntryExcludedEntryKeysBody;

BCCSingleEntrySelectorBody:
	selector = BCCAbstractSelector;

BCCMultiEntrySelectorBody:
	selectors += BCCAbstractSelector (',' selectors += BCCAbstractSelector)* 'and' selectors += BCCAbstractSelector;

BCCSingleEntryExcludedEntryKeysBody:
	excludedEntryKey = BCCEntryKeyReference;

BCCMultiEntryExcludedEntryKeysBody:
	excludedEntryKeys += BCCEntryKeyReference (',' excludedEntryKeys += BCCEntryKeyReference)* 'and' excludedEntryKeys += BCCEntryKeyReference;

BCCEntryKeyReference:
	entryKey = BCCEntryKey;

BCCExpression:
	BCCOrExpression;

BCCOrExpression returns BCCExpression:
	BCCAndExpression ({BCCOrExpression.left = current} 'OR' right = BCCAndExpression)*;
	
BCCAndExpression returns Expression:
	BCCIntegerRelationalExpression ({BCCAndExpression.left = current} 'AND' right = BCCIntegerRelationalExpression)*;
	
BCCIntegerRelationalExpression returns Expression:
	BCCStringRelationalExpression ({BCCIntegerRelationalExpression.left = current} operator = BCCIntegerRelationalOperator right = BCCStringRelationalExpression)*;
	
BCCStringRelationalExpression returns Expression:
	BCCNoKeywordExpression ({BCCStringRelationalExpression.left = current} operator = BCCStringRelationalOperator right = BCCNoKeywordExpression)*;
	
BCCNoKeywordExpression returns Expression:
	BCCUnaryExpression ({BCCNoKeywordExpression.left = current} right = BCCUnaryExpression)*;
	
BCCUnaryExpression returns Expression:
	BCCAbstractFieldSelectionExpression | BCCFieldExistsExpression | BCCFieldsExistExpression | BCCStringExpression |
	BCCIntegerExpression | BCCUsesReplacePatternExpression | BCCUseReplacePatternExpression | BCCIsIntegerExpression |
	BCCAreIntegerExpression | BCCNotExpression | BCCParenthesesExpression;

BCCAbstractFieldSelectionExpression:
	BCCSingleFieldSelectionExpression | BCCMultiFieldSelectionExpression;

BCCFieldExistsExpression:
	{BCCFieldExistsExpression} 'field' 'exists';

BCCFieldsExistExpression:
	{BCCFieldsExistExpression} 'fields' 'exist';

BCCUsesReplacePatternExpression:
	{BCCUsesReplacePatternExpression} 'uses' 'replace' 'pattern';

BCCUseReplacePatternExpression:
	{BCCUseReplacePatternExpression} 'use' 'replace' 'pattern';

BCCIsIntegerExpression:
	{BCCIsIntegerExpression} 'is' 'integer';

BCCAreIntegerExpression:
	{BCCAreIntegerExpression} 'are' 'integer';

BCCSingleFieldSelectionExpression:
	selection = BCCAbstractSpecificFieldSelector;

BCCMultiFieldSelectionExpression:
	selections += BCCAbstractSpecificFieldSelector (',' selections += BCCAbstractSpecificFieldSelector)* 'and' selections += BCCAbstractSpecificFieldSelector;

BCCParenthesesExpression:
	'(' expression = BCCExpression ')';

BCCNotExpression:
	'!' expression = BCCParenthesesExpression;

BCCIfThenElseExpression:
	ifThenExpression = BCCIfThenExpression
	('else' elseIfThenExpressions += BCCIfThenExpression)*
	('else' '{'
		(elseExpressions += BCCEvaluationExpression)*
	'}')?;

BCCIfThenExpression:
	'if' '(' ifExpression = BCCExpression ')' '{'
		(thenExpressions += BCCEvaluationExpression)*
	'}';

BCCEvaluationExpression:
	BCCAbstractMarkerExpression | BCCIfThenElseExpression | BCCReturnExpression;

BCCReturnExpression:
	{BCCReturnExpression} 'return';

BCCAbstractMarkerExpression:
	BCCWarningMarkerExpression | BCCErrorMarkerExpression;

BCCWarningMarkerExpression:
	'add' 'warning' message = STRING ('to' causingElement = BCCSingleFieldSelectionExpression)?;

BCCErrorMarkerExpression:
	'add' 'error' message = STRING ('to' causingElement = BCCSingleFieldSelectionExpression)?;

BCCAbstractSelector:
	BCCAllSelector | BCCAbstractSpecificBibTeXEntrySelector;

BCCAllSelector:
	{BCCAllSelector} '*';

BCCAbstractSpecificBibTeXEntrySelector:
	BCCInProceedingsEntrySelector | BCCBookEntrySelector | BCCArticleEntrySelector | BCCStandardEntrySelector |
	BCCInBookEntrySelector | BCCReportEntrySelector | BCCThesisEntrySelector | BCCInCollectionEntrySelector | BCCProceedingsEntrySelector |
	BCCBookletEntrySelector | BCCConferenceEntrySelector | BCCManualEntrySelector | BCCMasterthesisEntrySelector | BCCMiscEntrySelector |
	BCCPhdThesisEntrySelector | BCCTechReportEntrySelector | BCCUnpublishedEntrySelector;

BCCInProceedingsEntrySelector:
	{BCCInProceedingsEntrySelector} INPROCEEDINGS;

BCCBookEntrySelector:
	{BCCBookEntrySelector} BOOK;

BCCBookletEntrySelector:
	{BCCBookletEntrySelector} BOOKLET;

BCCConferenceEntrySelector:
	{BCCConferenceEntrySelector} CONFERENCE;

BCCManualEntrySelector:
	{BCCManualEntrySelector} MANUAL;

BCCMasterthesisEntrySelector:
	{BCCMasterthesisEntrySelector} MASTERTHESIS;

BCCMiscEntrySelector:
	{BCCMiscEntrySelector} MISC;

BCCPhdThesisEntrySelector:
	{BCCPhdThesisEntrySelector} PHDTHESIS;

BCCArticleEntrySelector:
	{BCCArticleEntrySelector} ARTICLE;

BCCStandardEntrySelector:
	{BCCStandardEntrySelector} STANDARD;

BCCInBookEntrySelector:
	{BCCInBookEntrySelector} INBOOK;

BCCReportEntrySelector:
	{BCCReportEntrySelector} REPORT;

BCCTechReportEntrySelector:
	{BCCTechReportEntrySelector} TECHREPORT;

BCCUnpublishedEntrySelector:
	{BCCUnpublishedEntrySelector} UNPUBLISHED;

BCCThesisEntrySelector:
	{BCCThesisEntrySelector} THESIS;

BCCInCollectionEntrySelector:
	{BCCInCollectionEntrySelector} INCOLLECTION;

BCCProceedingsEntrySelector:
	{BCCProceedingsEntrySelector} PROCEEDINGS;

BCCAbstractSpecificFieldSelector:
	BCCTitleFieldSelector | BCCEditionFieldSelector | BCCUrlFieldSelector | BCCInstitutionFieldSelector | BCCOrganizationFieldSelector | BCCRevisionFieldSelector | BCCIsbnFieldSelector |
	BCCDoiFieldSelector | BCCAddressFieldSelector | BCCTypeFieldSelector | BCCNumberFieldSelector | BCCVolumeFieldSelector | BCCKeywordsFieldSelector | BCCNoteFieldSelector | BCCPublisherFieldSelector |
	BCCJournalFieldSelector | BCCBooktitleFieldSelector | BCCSchoolFieldSelector | BCCSeriesFieldSelector | BCCChapterFieldSelector | BCCVersionFieldSelector | BCCHowPublishedFieldSelector |
	BCCMonthFieldSelector | BCCDateFieldSelector | BCCYearFieldSelector | BCCPagesFieldSelector | BCCAuthorFieldSelector | BCCEditorFieldSelector;

BCCTitleFieldSelector:
	fieldKeyword = TITLE;

BCCEditionFieldSelector:
	fieldKeyword = EDITION;

BCCInstitutionFieldSelector:
	fieldKeyword = INSTITUTION;

BCCOrganizationFieldSelector:
	fieldKeyword = ORGANIZATION;

BCCRevisionFieldSelector:
	fieldKeyword = REVISION;

BCCUrlFieldSelector:
	fieldKeyword = URL;

BCCDoiFieldSelector:
	fieldKeyword = DOI;

BCCTypeFieldSelector:
	fieldKeyword = TYPE;

BCCIsbnFieldSelector:
	fieldKeyword = ISBN;

BCCAddressFieldSelector:
	fieldKeyword = ADDRESS;

BCCHowPublishedFieldSelector:	
	fieldKeyword = HOWPUBLISHED;

BCCNumberFieldSelector:
	fieldKeyword = NUMBER;

BCCVolumeFieldSelector:
	fieldKeyword = VOLUME;

BCCNoteFieldSelector:
	fieldKeyword = NOTE;

BCCSchoolFieldSelector:
	fieldKeyword = SCHOOL;

BCCKeywordsFieldSelector:
	fieldKeyword = KEYWORDS;

BCCBooktitleFieldSelector:
	fieldKeyword = BOOKTITLE;

BCCSeriesFieldSelector:
	fieldKeyword = SERIES;

BCCPublisherFieldSelector:
	fieldKeyword = PUBLISHER;

BCCJournalFieldSelector:
	fieldKeyword = JOURNAL;

BCCChapterFieldSelector:
	fieldKeyword = CHAPTER;

BCCVersionFieldSelector:
	fieldKeyword = VERSION;

BCCAuthorFieldSelector:
	fieldKeyword = AUTHOR;

BCCEditorFieldSelector:
	fieldKeyword = EDITOR;

BCCYearFieldSelector:
	fieldKeyword = YEAR;

BCCDateFieldSelector:
	fieldKeyword = DATE;

BCCMonthFieldSelector:
	fieldKeyword = MONTH;

BCCPagesFieldSelector:
	fieldKeyword = PAGES;

BCCIntegerExpression:
	value = INT;

BCCStringExpression:
	value = STRING;

enum BCCIntegerRelationalOperator:
	EQUAL = '==' | NOT_EQUAL = '!=' |
	SMALLER = '<' | SMALLER_OR_EQUAL = '<=' |
	GREATER = '>' | GREATER_OR_EQUAL = '>=';

enum BCCStringRelationalOperator:
	EQUALS = 'equals' | STARTS_WITH = 'starts with' |
	ENDS_WITH = 'ends with' | CONTAINS = 'contains';

BCCEntryKey:
	ID (':' | '+' | '-' | ID | INT)*;

terminal INPROCEEDINGS:
	'inproceedings';

terminal BOOK:
	'book';

terminal BOOKLET:
	'booklet';

terminal CONFERENCE:
	'conference';

terminal MANUAL:
	'manual';

terminal MASTERTHESIS:
	'masterthesis';

terminal MISC:
	'misc';

terminal PHDTHESIS:
	'phdthesis';

terminal ARTICLE:
	'article';

terminal STANDARD:
	'standard';

terminal INBOOK:
	'inbook';

terminal REPORT:
	'report';

terminal TECHREPORT:
	'techreport';

terminal UNPUBLISHED:
	'unpublished';

terminal THESIS:
	'thesis';

terminal INCOLLECTION:
	'incollection';

terminal PROCEEDINGS:
	'proceedings';

terminal TITLE:
	'title';

terminal EDITION:
	'edition';

terminal INSTITUTION:
	'institution';

terminal ORGANIZATION:
	'organization';

terminal REVISION:
	'revision';

terminal URL:
	'url';

terminal DOI:
	'doi';

terminal TYPE:
	'type';

terminal ISBN:
	'isbn';

terminal ADDRESS:
	'address';

terminal HOWPUBLISHED:	
	'howpublished';

terminal NUMBER:
	'number';

terminal VOLUME:
	'volume';

terminal NOTE:
	'note';

terminal SCHOOL:
	'school';

terminal KEYWORDS:
	'keywords';

terminal BOOKTITLE:
	'booktitle';

terminal SERIES:
	'series';

terminal PUBLISHER:
	'publisher';

terminal JOURNAL:
	'journal';

terminal CHAPTER:
	'chapter';

terminal VERSION:
	'version';

terminal AUTHOR:
	'author';

terminal EDITOR:
	'editor';

terminal YEAR:
	'year';

terminal DATE:
	'date';

terminal MONTH:
	'month';

terminal PAGES:
	'pages';

grammar de.david_wille.bibtexconsistencychecker.executionmodel.BCCExecutionModel hidden(WS, ML_COMMENT, SL_COMMENT)

generate bCCExecutionModel "http://www.david-wille.de/bibtexconsistencychecker/executionmodel/BCCExecutionModel"

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

BCCExecutionModel:
	settingsEntry = BCCSettingsEntry
	(
		(
			(bibTeXFilesEntry = BCCBibTeXFilesEntry)? &
			(rulesEntry = BCCConsistencyRulesEntry)?
		)
	);

BCCSettingsEntry:
	'settings' '{'
		'name' name = STRING
		(ensureSettingsEntry = BCCEnsureSettingsEntry)?
	'}';

BCCEnsureSettingsEntry:
	{BCCEnsureSettingsEntry} 'ensure' '{'
		(
			(ensureAlphbeticOrderActivated ?= BCCAlphabeticOrderKeyword)? &
			(ensureShortHarvardStyleActivated ?= BCCShortHarvardStyleKeyword)?
		)
	'}'
;

BCCBibTeXFilesEntry:
	{BCCBibTeXFilesEntry} BCCBibTeXFilesKeyword '{'
		entries += BCCFilePathEntry
		(',' entries += BCCFilePathEntry)*
	'}';

BCCConsistencyRulesEntry:
	{BCCConsistencyRulesEntry} BCCConsistencyRulesKeyword '{'
		entries += BCCFilePathEntry
		(',' entries += BCCFilePathEntry)*
	'}';

BCCFilePathEntry:
	path = BCCValidPath;

BCCValidPath:
	FILE_FOLDER_PATH | BCCUsedKeyword;

BCCUsedKeyword:
	'alphabetic' | 'order' | 'short' | 'harvard' | 'style' | 'consistency' |
	'rules' | 'bibtex' | 'files' | 'settings' | 'name' | 'ensure';

BCCAlphabeticOrderKeyword:
	'alphabetic' 'order';

BCCShortHarvardStyleKeyword:
	'short' 'harvard' 'style';

BCCConsistencyRulesKeyword:
	'consistency' 'rules';

BCCBibTeXFilesKeyword:
	'bibtex' 'files';

terminal FILE_FOLDER_PATH:
	('bibliography/' | 'rules/') (FOLDER_PATH)* (FILE_PATH)?;

terminal FILE_PATH:
	('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z'|'-'|'_'|'0'..'9')* ('.bib' | '.bcc_rule');

terminal FOLDER_PATH:
	('a'..'z'|'A'..'Z'|'_'|'0'..'9') ('a'..'z'|'A'..'Z'|'-'|'_'|'0'..'9')* '/';

terminal STRING	: 
			'"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
			"'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
		; 
terminal ML_COMMENT	: '/*' -> '*/';

terminal SL_COMMENT 	: '//' !('\n'|'\r')* ('\r'? '\n')?;

terminal WS			: (' '|'\t'|'\r'|'\n')+;
